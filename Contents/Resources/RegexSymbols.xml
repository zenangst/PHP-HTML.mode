<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE syntax SYSTEM "symbol.dtd">
<symbols>
    <blocks>
        <beginregex>{</beginregex>
        <endregex>}</endregex>
    </blocks>

	<!-- CODA -->
	<symbol id="language.include" font-weight="normal" font-style="normal" image="Symbol#" indentation="0" ignoreblocks="no"> 
		<regex>include[\s|\(]["|'](\w+\.\w+)["|']</regex>
		<regex>require[\s|\(]["|'](\w+\.\w+)["|']</regex>
		<regex>include_once[\s|\(]["|'](\w+\.\w+)["|']</regex>
		<regex>require_once[\s|\(]["|'](\w+\.\w+)["|']</regex>
		<postprocess>
			<find>[-\s_\d\w\./'"]*?/</find>
			<replace></replace>
			<find>['"]\s*$|^\s*['"]</find>
			<replace></replace>
		</postprocess>
	</symbol>
	
	<!-- END CODA -->
	
	 <symbol id="language.prototype" font-weight="normal" font-style="normal" image="SymbolP" indentation="0" ignoreblocks="no" useforautocomplete="yes">
        <regex>(?:^|[\r\n])[ \t]*(?:(?:abstract|protected)[ \t]+)?(?:(?:(?:p(?:rivate|ublic|rotected))|abstract)[ \t]+)?(?:static[ \t]+)?function\s+(\w+\s*\([^);]*\))[ \t]*;</regex>
        <postprocess>
            <find>[\n\r]</find>
            <replace> </replace>
            <find>[ \t]+</find>
            <replace> </replace>
        </postprocess>
    </symbol>
	
    <symbol id="language.function" font-weight="normal" font-style="normal" image="SymbolF()" indentation="0" ignoreblocks="no" useforautocomplete="yes"> 
        <regex>(?:^|[\r\n])(?:(?:final|static|abstract)[ \t]+)?(?:(?:(?:p(?:rivate|ublic|rotected))|abstract)[ \t]+)?(?:static[ \t]+)?function\s+((\w+)\s*\(([^{;]*)\))[^{};]*\{</regex>
        <postprocess>
            <find>[\n\r]</find>
            <replace> </replace>
            <find>[ \t]+</find>
            <replace> </replace>
        </postprocess>
        <arguments>(&amp;?([\$\w]+)[^,]*)[,]*</arguments>
        <captures>{ "value" : "1", "name" : "2", "arguments" : "3" }</captures>
    </symbol>

    <symbol id="language.function" font-weight="normal" font-style="normal" image="SymbolF()" indentation="1" ignoreblocks="no" useforautocomplete="yes">
		<regex>(?:^|[\r\n])[ \t]+(?:(?:final|static|abstract)[ \t]+)?(?:(?:(?:p(?:rivate|ublic|rotected))|abstract)[ \t]+)?(?:static[ \t]+)?function[ \t]+&amp;?\s*(([\w\d_]+)[ \t]*\(([^{;]*)\))[^{};]*\{</regex>
       <postprocess>
            <find>[\n\r]</find>
            <replace> </replace>
            <find>[ \t]+</find>
            <replace> </replace>
        </postprocess>
        <arguments>(&amp;?([\$\w]+)[^,]*)[,]*</arguments>
        <captures>{ "value" : "1", "name" : "2", "arguments" : "3" }</captures>
        <regex>(?:^|(?&lt;=\r))[ \t]*switch[^\n\(]+\(([^\)]+)</regex>
        <postprocess>
            <find>"|'|:|\t+</find>
            <replace></replace>
        </postprocess>
    </symbol>
    
    <symbol id="case" useforautocomplete="no" image="SymbolCase">
        <regex>(?:^|(?&lt;=\r))[ \t]*(case [^\n]+)</regex>
        <postprocess>
            <find>"|'|:|\t+</find>
            <replace></replace>
        </postprocess>
    </symbol>
    
    <symbol id="default" useforautocomplete="no" image="SymbolCaseDefault">
        <regex>(?:^|(?&lt;=\r))[ \t]*(default:)</regex>
        <postprocess>
            <find>"|'|:|\t+</find>
            <replace></replace>
        </postprocess>
    </symbol>

	<symbol id="language.variable" hidden="yes" useforautocomplete="yes">
		<regex>(\$\w[\w\d]+)</regex>
		<regex>(\$[\w\$][\w\d]+)</regex>
	</symbol>
  
	<symbol id="language.variable" hidden="no" useforautocomplete="yes" image="SymbolsV">
		<regex>[private|protected|public]\s(\$\w+)</regex>
		<postprocess>
			<find>\$</find>
			<replace>$this-></replace>
		</postprocess>
	</symbol>

    <symbol id="language.class" font-weight="bold" font-style="normal" image="SymbolC" indentation="0" ignoreblocks="yes" useforautocomplete="yes">
        <regex>(?:^|[\r\n])[ \t]*(?:(?:final|static|abstract)[ \t]+)?class[ \t]+([a-zA-Z0-9_]+)(?:[ \t]+extends[ \t]+[a-zA-Z0-9_]+)?[ \t]*[^{}]*\{</regex>
        <postprocess>
            <find>[\n\r]</find>
            <replace> </replace>
            <find>[ \t]+</find>
            <replace> </replace>
        </postprocess>
        <poststring>()</poststring>
        <movecursor>1</movecursor>
    </symbol>
    
     <symbol id="language.trait" font-weight="bold" font-style="normal" image="SymbolT" indentation="0" ignoreblocks="yes" useforautocomplete="yes">
        <regex>(?:^|[\r\n])[ \t]*?trait[ \t]+([a-zA-Z0-9_]+)[ \t]*[^{}]*\{</regex>
        <postprocess>
            <find>[\n\r]</find>
            <replace> </replace>
            <find>[ \t]+</find>
            <replace> </replace>
        </postprocess>
        <poststring>()</poststring>
        <movecursor>1</movecursor>
    </symbol>

    <symbol id="Comment Marks" font-weight="bold" indentation="0" image="SymbolMark" ignoreblocks="yes" show-in-comments="yes">
        <regex>//- mark[\t ]*(?:-(?=[\n\r]))?([^\n\r]*)</regex>
    </symbol>

	 <!-- CODA -->
    <symbol id="Pragma marks" font-weight="normal" font-style="normal" image="SymbolMark" indentation="0" ignoreblocks="no" show-in-comments="yes">
        <regex>//\s*!([^\n\r]+)</regex>
		<regex>/\*\s*!(.+) \*/</regex>
    </symbol>
    
    <!-- END CODA -->
    
    <symbol id="TODO" font-weight="normal" font-style="normal" image="Symbol!" indentation="0" ignoreblocks="no" show-in-comments="yes">
	    <regex>[TODO|EDGE_CASE]\s([^\n]+)</regex>
    </symbol>
</symbols>
